#!/usr/bin/env python3
"""
Kritikus hib√°k gyors jav√≠t√°sa a K√°rtya Csere Platform projektben
Futtat√°s: python fix_critical_bugs.py
"""

import os
import shutil
from pathlib import Path

def fix_requirements():
    """Requirements.txt jav√≠t√°sa"""
    print("üîß Requirements.txt jav√≠t√°sa...")
    
    correct_requirements = """streamlit>=1.28.0
# bcrypt>=4.0.0  # Opcion√°lis: biztons√°gos jelsz√≥ kezel√©shez
# pillow>=9.0.0  # Opcion√°lis: k√©pkezel√©shez
"""
    
    with open("requirements.txt", "w") as f:
        f.write(correct_requirements)
    
    print("‚úÖ Requirements.txt jav√≠tva!")

def fix_page_names():
    """Oldal f√°jlnevek jav√≠t√°sa (emoji elt√°vol√≠t√°sa)"""
    print("üîß Oldal f√°jlnevek jav√≠t√°sa...")
    
    pages_dir = Path("pages")
    if not pages_dir.exists():
        print("‚ùå pages mappa nem tal√°lhat√≥!")
        return
    
    # F√°jln√©v mapping
    renames = {
        "02_üÉè_K√°rty√°im.py": "02_Kartyaim.py",
        "03_üîç_Keres√©s.py": "03_Kereses.py",
        "04_‚≠ê_K√≠v√°ns√°glista.py": "04_Kivansaglista.py",
        "05_üì®_√úzenetek.py": "05_Uzenetek.py",
        "06_üë§_Profil.py": "06_Profil.py",
        "07_üéØ_Matchmaking.py": "07_Matchmaking.py"
    }
    
    for old_name, new_name in renames.items():
        old_path = pages_dir / old_name
        new_path = pages_dir / new_name
        
        if old_path.exists():
            shutil.move(str(old_path), str(new_path))
            print(f"  ‚úÖ {old_name} ‚Üí {new_name}")

def add_init_files():
    """__init__.py f√°jlok hozz√°ad√°sa a megfelel≈ë import-okhoz"""
    print("üîß __init__.py f√°jlok hozz√°ad√°sa...")
    
    # Root __init__.py
    with open("__init__.py", "w") as f:
        f.write('"""K√°rtya Csere Platform"""\n')
    
    # pages/__init__.py
    pages_dir = Path("pages")
    if pages_dir.exists():
        with open(pages_dir / "__init__.py", "w") as f:
            f.write('"""Platform oldalak"""\n')
    
    print("‚úÖ __init__.py f√°jlok l√©trehozva!")

def create_config_file():
    """Konfigur√°ci√≥ f√°jl l√©trehoz√°sa"""
    print("üîß Konfigur√°ci√≥ f√°jl l√©trehoz√°sa...")
    
    config_content = """# config.py
import os
from pathlib import Path

# Alap be√°ll√≠t√°sok
BASE_DIR = Path(__file__).parent
DATABASE_NAME = 'cards_platform.db'
DATABASE_PATH = BASE_DIR / DATABASE_NAME

# Streamlit be√°ll√≠t√°sok
PAGE_CONFIG = {
    "page_title": "K√°rtya Csere Platform",
    "page_icon": "üÉè",
    "layout": "wide",
    "initial_sidebar_state": "expanded"
}

# Biztons√°g
SECRET_KEY = os.environ.get('SECRET_KEY', 'development-key-change-in-production')
PASSWORD_SALT_ROUNDS = 100000  # PBKDF2 iter√°ci√≥k sz√°ma

# Rate limiting
MAX_LOGIN_ATTEMPTS = 5
LOGIN_TIMEOUT_SECONDS = 300  # 5 perc

# Fejleszt≈ëi m√≥d
DEBUG = os.environ.get('DEBUG', 'True').lower() == 'true'
"""
    
    with open("config.py", "w", encoding="utf-8") as f:
        f.write(config_content)
    
    print("‚úÖ config.py l√©trehozva!")

def update_imports_in_pages():
    """Import utas√≠t√°sok jav√≠t√°sa a pages mapp√°ban"""
    print("üîß Import utas√≠t√°sok jav√≠t√°sa...")
    
    pages_dir = Path("pages")
    if not pages_dir.exists():
        print("‚ùå pages mappa nem tal√°lhat√≥!")
        return
    
    # Minden .py f√°jl a pages mapp√°ban
    for py_file in pages_dir.glob("*.py"):
        with open(py_file, "r", encoding="utf-8") as f:
            content = f.read()
        
        # sys.path manipul√°ci√≥ elt√°vol√≠t√°sa √©s helyettes√≠t√©se
        old_import = """import sys
import os

# Add parent directory to path for imports
parent_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(parent_dir)"""
        
        new_import = """import sys
import os
from pathlib import Path

# Clean import setup
sys.path.insert(0, str(Path(__file__).parent.parent))"""
        
        if old_import in content:
            content = content.replace(old_import, new_import)
            
            with open(py_file, "w", encoding="utf-8") as f:
                f.write(content)
            
            print(f"  ‚úÖ {py_file.name} importok jav√≠tva")

def create_run_script():
    """Ind√≠t√≥ script l√©trehoz√°sa"""
    print("üîß Ind√≠t√≥ script l√©trehoz√°sa...")
    
    run_script = """#!/usr/bin/env python3
\"\"\"
K√°rtya Csere Platform ind√≠t√≥ script
Haszn√°lat: python run.py
\"\"\"

import subprocess
import sys

def main():
    print("üöÄ K√°rtya Csere Platform ind√≠t√°sa...")
    print("-" * 50)
    
    try:
        # Streamlit futtat√°sa
        subprocess.run([sys.executable, "-m", "streamlit", "run", "main.py"])
    except KeyboardInterrupt:
        print("\\nüëã Viszl√°t!")
    except Exception as e:
        print(f"‚ùå Hiba t√∂rt√©nt: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
"""
    
    with open("run.py", "w", encoding="utf-8") as f:
        f.write(run_script)
    
    # Futtathat√≥v√° tessz√ºk Linux/Mac rendszeren
    os.chmod("run.py", 0o755)
    
    print("‚úÖ run.py l√©trehozva!")

def main():
    """F≈ë jav√≠t√≥ folyamat"""
    print("=" * 50)
    print("üîß K√ÅRTYA CSERE PLATFORM - KRITIKUS HIB√ÅK JAV√çT√ÅSA")
    print("=" * 50)
    
    # 1. Requirements jav√≠t√°sa
    fix_requirements()
    
    # 2. Oldal nevek jav√≠t√°sa (opcion√°lis)
    # fix_page_names()  # Kommenteld ki, ha nem akarod
    
    # 3. Init f√°jlok
    add_init_files()
    
    # 4. Config f√°jl
    create_config_file()
    
    # 5. Import jav√≠t√°sok
    update_imports_in_pages()
    
    # 6. Ind√≠t√≥ script
    create_run_script()
    
    print("=" * 50)
    print("‚úÖ K√âSZ! A kritikus hib√°k jav√≠tva!")
    print("\nüìå K√∂vetkez≈ë l√©p√©sek:")
    print("1. pip install -r requirements.txt")
    print("2. python run.py")
    print("3. Teszteld az alkalmaz√°st!")
    print("=" * 50)

if __name__ == "__main__":
    main()